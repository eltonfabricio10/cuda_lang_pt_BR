# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-16 21:51-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:42
msgid "Snip characters: letters, digits, \"_\". First character must be letter."
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:43
msgid ""
"\n"
"\"Snip\" is an alternative way to call commands.\n"
"    \n"
"• Simple case:\n"
"    \"pu\" is snip for command PageUp.\n"
"    Type in any text\n"
"        /pu\n"
"    and press Tab-key.\n"
"    Fragment \"/pu\" will be removed from text and undo-history, \n"
"    command PageUp will be called.\n"
"• More complex case:\n"
"    Type\n"
"        /3pu\n"
"    and command will be called 3 times.\n"
"    \n"
"Snip contains only letters, digits, \"_\", and starts with a letter.\n"
"        \n"
"Any command can have many snips assigned to it.\n"
"It's a good idea to assign keystrokes, for all available keyboard layouts, to the same command.\n"
"                        "
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:181
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:319
msgid "Need update CudaText"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:200
msgid "Suitable command names will contain all specified words.\r · Case is ignored.\r · Use \"_\" for word boundary.\r     \"_up\" selects \"upper\" but not \"group\"."
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:204
msgid "Suitable command snips will match specified string.\r · Case is important.\r · Use ? for any character and * for any fragment."
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:225
msgid "Command"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:225
msgid "Snip(s)"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:228
msgid "&Filter"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:229
msgid "&All"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:230
msgid "&OR"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:231
msgid "In &Command:"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:233
msgid "In &Snip(s):"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:234
msgid "&?"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:237
msgid "A&dd Snip"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:238
msgid "F&ree Snip(s)"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:239
msgid "Hel&p"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:240
msgid "Close"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:251
msgid "Configure \"SnipToCall\""
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:272
msgid "Help for \"Config SnipToCall\""
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:274
msgid "&Close"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:275
msgid "• In Command.\r{ccnd_h}\r \r• In Snip. \r{scnd_h}\r "
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:287
msgid ""
"Do you want to remove snip(s) \n"
"    {}\n"
"for command \"{}\"?"
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:296
msgid "Snippet for \"{}\" without leading \"/\""
msgstr ""

#:
#: /home/eltonff/Downloads/2-EXTRAS/CudaText_Plugins/cuda_snip2call/cd_snip2call.py:307
msgid ""
"Snippet \"{}\" is already assigned\n"
"to command \"{}\".\n"
"\n"
"Do you want to reassign the snippet\n"
"to command \"{}\"?"
msgstr ""

